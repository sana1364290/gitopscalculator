# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: CI - Pipeline
on: 
 push:
    branches: [ master ]
    tags:
      - v*

env:
 IMAGE_NAME: image

jobs:
  Setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Maven - Clean Job
      run: mvn -B clean --file pom.xml
  Compile:
    runs-on: ubuntu-latest
    needs: Setup
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Maven - Compile Job
      run: mvn -B compile --file pom.xml 

  # StaticAnalysis:
  #   runs-on: ubuntu-latest
  #   needs: Compile
  #   name: Static Analysis
    
  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 0  
  #   - name: Set up JDK 11
  #     uses: actions/setup-java@v1
  #     with:
  #       java-version: 11
  #   - name: Cache SonarCloud packages
  #     uses: actions/cache@v1
  #     with:
  #       path: ~/.sonar/cache
  #       key: ${{ runner.os }}-sonar
  #       restore-keys: ${{ runner.os }}-sonar
  #   - name: Cache Maven packages
  #     uses: actions/cache@v1
  #     with:
  #       path: ~/.m2
  #       key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
  #       restore-keys: ${{ runner.os }}-m2
  #   - name: Build and analyze
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Needed to get PR information, if any
  #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #     run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  UnitTesting:
    runs-on: ubuntu-latest
    needs: Compile
    name: Unit Testing    
    steps:
      - run: echo Should run unit tests.
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Build and Run Tests
        run: mvn -B test --file pom.xml
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.9
        with:
          files: "target/surefire-reports/*.xml"
  
  CodeCoverage:
    runs-on: ubuntu-latest
    needs: UnitTesting
    name: Code Coverage
    
    steps:
      - run: echo Should run code coverage.
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Build and Run Tests
        run: mvn -X org.jacoco:jacoco-maven-plugin:report 
     
          
  War:
    runs-on: ubuntu-latest
    needs: CodeCoverage
    name: War 

    steps:
      - run: echo should packaging war
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: War packaging
        run: mvn -X war:war
        
  PublishPackage:
    runs-on: ubuntu-latest
    needs: War
    name: Publish package to the GitHub
         
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github 
        settings-path: ${{ github.workspace }}
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml 
      env:
        GITHUB_TOKEN: ${{ github.token }}

  docker:
    name: Publish - Docker Hub
    needs: War
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
          repository: nidaap/gitopscalculator/gitopscalculator-latest
          tag_with_ref: true

  PushDockerImage_GitHubPackages:
    name: Push Docker image to GitHub Packages
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
          registry: docker.pkg.github.com
          repository: nidaap/gitopscalculator/gitopscalculator-latest
          tag_with_ref: true
          
          
